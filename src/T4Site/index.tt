<#@ output extension=".html"            #>
<#@ import namespace="System"           #>
<#@ import namespace="System.IO"        #>
<#@ import namespace="System.Linq"      #>
<#@ import namespace="System.Text"      #>
<#@ import namespace="System.Text.Json" #>
<!DOCTYPE html>
<html>
  <head>
    <title>Windows Terminal Shader Gallery</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href='https://fonts.googleapis.com/css?family=Josefin Slab' rel='stylesheet'>
    <style>
      div.center {
        display: flex;
        justify-content: center;
      }


      .gfx {
        width: 80vw;
      }

      .glow {
        color: #6E8;
        text-shadow: 0 0 2vw #6E8, 0 0 4vw #374, 0 0 6vw #374;
      }
      pre {
        font-size: 2vw;
      }

      body {
          font-family: 'Josefin Slab';
          font-size: 3vw;
          color: white;
          background-color: black;
      }

      a:link {
        text-decoration: none;
        color: #FF8240;
      }

      a:visited {
        text-decoration: none;
        color: #FF8240;
      }

      a:hover {
        text-decoration: underline;
        color: #DFF180;
      }

      a:active {
        text-decoration: underline;
        color: #DFF180;
      }
  </style>
  </head>
  <body>
    <h1 class="glow">Windows Terminal Shader Gallery</h1>

    <p><span class="glow">Everyone</span> loves cool looking shaders in Windows Terminal!</p>

    <div class="center">
      <iframe style="width: 95vw; height: 40vw;" frameborder="0" src="https://www.shadertoy.com/embed/DdSGzy?gui=true&t=10&paused=false&muted=true" allowfullscreen></iframe>
    </div>


    <p>However, finding them and installing them are a bit of a pain so we collected some here in this gallery and developed a tool for you to simplify installing a shader in your terminal.</p>

    <h2>Tool installation</h2>

    <pre class="glow">
# WindowsTerminalShaderTool requires
#  1. Windows Terminal
#  2. .NET 7.0
# Install the WindowsTerminalShaderTool
> dotnet tool install -g WindowsTerminalShaderTool
# List all shaders in the gallery
> wt-shader-tool --list
# Install the memories of green shader in your default profile
> wt-shader-tool --install memories-of-green
# Starts tool in interactive mode to let you find and install a shader
> wt-shader-tool
# Starts tool in "Windows Terminal Preview" mode
> wt-shader-tool -p
    </pre>

    <h2>Contributing</h2>
    If you like to contribute shaders or other improvements go <a target="_blank" href="https://github.com/mrange/windows-terminal-shader-gallery">here</a>.

    <h2>Gallery</h2>
<#
  var docsPath      = Path.GetFullPath("docs/");
  var galleryPath   = Path.GetFullPath("gallery/");
  var shaderPaths   = Directory.GetDirectories(galleryPath).OrderBy(p => p).ToArray();

  Console.WriteLine($"Iterating all shaders in: {galleryPath}");
#>
<# foreach (var shaderPath in shaderPaths) { #>
<#
  Console.WriteLine($"Processing {shaderPath}");
  var shaderMetaDataPath  = Path.Combine(shaderPath, "metadata.json");

  var shaderJson          = File.ReadAllText(shaderMetaDataPath);
  var shaderDoc           = JsonDocument.Parse(shaderJson);

  var rootElement         = shaderDoc.RootElement;
  var infoElement         = rootElement.GetProperty("info");
  var legalElement        = rootElement.GetProperty("legal");

  var id                  = rootElement.GetProperty("id").GetString();

  var title               = infoElement.GetProperty("title").GetString();
  var description         = infoElement.GetProperty("summary").GetString();
  var shadertoy           = infoElement.GetProperty("shadertoy").GetString();

  var authors             = "";
  {
    var array = legalElement.GetProperty("authors");
    var sb = new StringBuilder();
    var len= array.GetArrayLength();
    for (var i = 0; i < len; ++i)
    {
      var val = array[i].GetString();
      var prefix = i switch
      {
        0                   => "*"
      , _ when i == len - 1 => " and "
      , _                   => ", "
      };
      sb.Append(prefix);
      sb.Append(val);
      authors = sb.ToString();
    }

  }

#>
    <h3><#=title#></h3>

    <p><i><#=description#></i></p>

    <div class="center">
      <img class="gfx" alt="The shader '<#=title#>' courtesy of shadertoy.com" src="https://www.shadertoy.com/media/shaders/<#=shadertoy#>.jpg"/>
    </div>

    <p>See '<#=title#>' live at <a target="_blank" href="https://www.shadertoy.com/view/<#=shadertoy#>">shadertoy.com</a></p>

    <p>Authors: <#=authors#></p>

    <pre class="glow">
# Install '<#=title#>' shader in your default profile
> wt-shader-tool --install <#=id#>
    </pre>

<# } #>
  </body>
</html>